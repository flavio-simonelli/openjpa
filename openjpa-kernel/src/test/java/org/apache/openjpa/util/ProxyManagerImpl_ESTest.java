/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 22 10:25:55 GMT 2025
 */

package org.apache.openjpa.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InvalidClassException;
import java.io.NotSerializableException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.sql.Date;
import java.sql.Timestamp;
import java.time.chrono.ChronoLocalDate;
import java.util.Calendar;
import java.util.Collection;
import java.util.Comparator;
import java.util.GregorianCalendar;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.SimpleTimeZone;
import java.util.SortedSet;
import java.util.TimeZone;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.openjpa.datacache.ConcurrentDataCache;
import org.apache.openjpa.kernel.DetachedStateManager;
import org.apache.openjpa.kernel.DetachedValueStateManager;
import org.apache.openjpa.lib.util.OrderedMap;
import org.apache.openjpa.util.CollectionChangeTrackerImpl;
import org.apache.openjpa.util.MapChangeTrackerImpl;
import org.apache.openjpa.util.Proxies;
import org.apache.openjpa.util.Proxy;
import org.apache.openjpa.util.ProxyManagerImpl;
import org.apache.openjpa.util.proxy.DelayedArrayListProxy;
import org.apache.openjpa.util.proxy.DelayedHashSetProxy;
import org.apache.openjpa.util.proxy.DelayedLinkedHashSetProxy;
import org.apache.openjpa.util.proxy.DelayedLinkedListProxy;
import org.apache.openjpa.util.proxy.DelayedPriorityQueueProxy;
import org.apache.openjpa.util.proxy.DelayedTreeSetProxy;
import org.apache.openjpa.util.proxy.DelayedVectorProxy;
import org.apache.openjpa.util.proxy.ProxyCollections;
import org.apache.openjpa.util.proxy.ProxyMaps;
import org.apache.tools.ant.AntClassLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class ProxyManagerImpl_ESTest extends ProxyManagerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<String> class0 = String.class;
      Class class1 = proxyManagerImpl0.toProxyableMapType(class0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertEquals("class java.lang.String", class1.toString());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedVectorProxy> class0 = DelayedVectorProxy.class;
      Class<?> class1 = proxyManagerImpl0.loadDelayedProxy(class0);
      assertNull(class1);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<InvalidClassException> class0 = InvalidClassException.class;
      SecurityManager securityManager0 = new SecurityManager();
      ThreadGroup threadGroup0 = securityManager0.getThreadGroup();
      MockThread mockThread0 = new MockThread(threadGroup0, "Connection2URL");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      AntClassLoader antClassLoader0 = new AntClassLoader(classLoader0, false);
      proxyManagerImpl0.loadBuildTimeProxy(class0, antClassLoader0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<SimpleTimeZone> class0 = SimpleTimeZone.class;
      boolean boolean0 = proxyManagerImpl0.isUnproxyable(class0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<ProxyMaps> class0 = ProxyMaps.class;
      boolean boolean0 = proxyManagerImpl0.isUnproxyable(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedArrayListProxy> class0 = DelayedArrayListProxy.class;
      boolean boolean0 = proxyManagerImpl0.isOrdered(class0);
      assertTrue(boolean0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Object> class0 = Object.class;
      boolean boolean0 = proxyManagerImpl0.isOrdered(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Timestamp> class0 = Timestamp.class;
      String string0 = ProxyManagerImpl.getProxyClassName(class0, true);
      assertEquals("org.apache.openjpa.util.java$sql$Timestamp$0$proxy", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      
      proxyManagerImpl0.setDelayCollectionLoading(true);
      boolean boolean0 = proxyManagerImpl0.getDelayCollectionLoading();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      
      proxyManagerImpl0.setAssertAllowedType(true);
      boolean boolean0 = proxyManagerImpl0.getAssertAllowedType();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<CollectionChangeTrackerImpl> class0 = CollectionChangeTrackerImpl.class;
      proxyManagerImpl0.generateProxyBeanBytecode(class0, false, "computeFields");
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<TimeZone> class0 = TimeZone.class;
      proxyManagerImpl0.findCopyConstructor(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedLinkedHashSetProxy> class0 = DelayedLinkedHashSetProxy.class;
      Constructor constructor0 = proxyManagerImpl0.findCopyConstructor(class0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertNotNull(constructor0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      DelayedHashSetProxy delayedHashSetProxy0 = new DelayedHashSetProxy();
      DelayedLinkedListProxy delayedLinkedListProxy0 = new DelayedLinkedListProxy(delayedHashSetProxy0);
      Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy> hashtable0 = new Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy>();
      hashtable0.put(delayedHashSetProxy0, delayedLinkedListProxy0);
      Map map0 = proxyManagerImpl0.copyMap(hashtable0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedLinkedListProxy> class0 = DelayedLinkedListProxy.class;
      boolean boolean0 = proxyManagerImpl0.allowsDuplicates(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedTreeSetProxy> class0 = DelayedTreeSetProxy.class;
      boolean boolean0 = proxyManagerImpl0.allowsDuplicates(class0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<GregorianCalendar> class0 = GregorianCalendar.class;
      proxyManagerImpl0.newCalendarProxy(class0, (TimeZone) null);
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newMapProxy(class0, class0, class0, (Comparator) null, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.apache.openjpa.util.java$util$GregorianCalendar$0$proxy cannot be cast to class org.apache.openjpa.util.proxy.ProxyMap (org.apache.openjpa.util.java$util$GregorianCalendar$0$proxy is in unnamed module of loader org.apache.openjpa.util.ClassLoaderProxyService$ProxiesClassLoader @3b2360ae; org.apache.openjpa.util.proxy.ProxyMap is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @469ede04)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCalendarProxy((Class) null, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      TimeZone timeZone0 = TimeZone.getDefault();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCalendarProxy(class0, timeZone0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.apache.openjpa.util.java$lang$Object$0$proxy cannot be cast to class java.util.Calendar (org.apache.openjpa.util.java$lang$Object$0$proxy is in unnamed module of loader org.apache.openjpa.util.ClassLoaderProxyService$ProxiesClassLoader @33a4e9b3; java.util.Calendar is in module java.base of loader 'bootstrap')
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        ProxyManagerImpl.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "4%";
      try { 
        ProxyManagerImpl.main(stringArray0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.isSetter((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.isOrdered((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyMapBytecode(class0, false, "resolve-errs");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.Boolean\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedPriorityQueueProxy> class0 = DelayedPriorityQueueProxy.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyMapBytecode(class0, true, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyDateBytecode(class0, false, "BKC1-Vc3-}o=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.Integer\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCollectionBytecode(class0, true, "!LYB,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.Integer\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<SimpleTimeZone> class0 = SimpleTimeZone.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCollectionBytecode(class0, false, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<System> class0 = System.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCalendarBytecode(class0, false, "T1SPzQ.L3HVhw;]ZZIu");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.System\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyCalendarBytecode(class0, true, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.generateProxyBeanBytecode(class0, true, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<SimpleTimeZone> class0 = SimpleTimeZone.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.findGetter(class0, (Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      ConcurrentDataCache concurrentDataCache0 = new ConcurrentDataCache();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyCustom(concurrentDataCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.datacache.AbstractDataCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Date date0 = new Date((-1911L));
      java.util.Date date1 = proxyManagerImpl0.copyDate(date0);
      proxyManagerImpl0.copyDate(date1);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<SimpleTimeZone> class0 = SimpleTimeZone.class;
      TimeZone timeZone0 = TimeZone.getDefault();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCalendarProxy(class0, timeZone0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to instantiate proxy for type \"java.util.SimpleTimeZone\".  Make sure the class has a default constructor.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Object> class0 = Object.class;
      proxyManagerImpl0.newCollectionProxy(class0, class0, (Comparator) null, false);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[7];
          stringArray0[0] = "java.util.LinkedHashSet";
          stringArray0[1] = "clone";
          stringArray0[2] = "clone";
          stringArray0[3] = "java.util.LinkedHashSet";
          stringArray0[4] = "clone";
          stringArray0[5] = "wp^Js~3S";
          stringArray0[6] = "java.util.LinkedHashSet";
          // Undeclared exception!
          try { 
            ProxyManagerImpl.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/home/flavio/Progetti/openjpa/openjpa-kernel/target/classes/org/apache/openjpa/util/java$util$LinkedHashSet$proxy.class\" \"write\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.base/java.lang.SecurityManager.checkWrite(SecurityManager.java:752)
             // java.base/sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:257)
             // java.base/sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:143)
             // java.base/sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:156)
             // java.base/sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:217)
             // java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
             // java.base/java.nio.file.Files.newOutputStream(Files.java:220)
             // java.base/java.nio.file.Files.write(Files.java:3425)
             // org.apache.openjpa.util.ProxyManagerImpl.main(ProxyManagerImpl.java:2040)
             // jdk.internal.reflect.GeneratedMethodAccessor192.invoke(Unknown Source)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:172)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:295)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:201)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:54)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<MapChangeTrackerImpl> class0 = MapChangeTrackerImpl.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newDateProxy(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Custom date type \"class org.apache.openjpa.util.MapChangeTrackerImpl\" needs a default constructor or a millisecond constructor.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<MockGregorianCalendar> class0 = MockGregorianCalendar.class;
      byte[] byteArray0 = proxyManagerImpl0.generateProxyBeanBytecode(class0, true, "strict");
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertEquals(2883, byteArray0.length);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.openjpa.util.InvalidStateException";
      ProxyManagerImpl.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedVectorProxy> class0 = DelayedVectorProxy.class;
      byte[] byteArray0 = proxyManagerImpl0.generateProxyBeanBytecode(class0, false, "|;XP{V}nr$GSv~");
      assertEquals(2792, byteArray0.length);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertNotNull(byteArray0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Integer> class0 = Integer.class;
      Class class1 = proxyManagerImpl0.toProxyableCollectionType(class0);
      proxyManagerImpl0.copyCustom(class1);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DetachedStateManager> class0 = DetachedStateManager.class;
      byte[] byteArray0 = proxyManagerImpl0.generateProxyCollectionBytecode(class0, false, "");
      assertEquals(2743, byteArray0.length);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedVectorProxy> class0 = DelayedVectorProxy.class;
      byte[] byteArray0 = proxyManagerImpl0.generateProxyCalendarBytecode(class0, false, "|;XP{V}nr$GSv~");
      assertEquals(3244, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Calendar> class0 = Calendar.class;
      byte[] byteArray0 = proxyManagerImpl0.generateProxyDateBytecode(class0, false, "stderr");
      assertEquals(1942, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Integer> class0 = Integer.class;
      Class<String> class1 = String.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newMapProxy(class0, class1, class0, (Comparator) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for final class \"class java.lang.Integer\".
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<SimpleTimeZone> class0 = SimpleTimeZone.class;
      Class<System> class1 = System.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCollectionProxy(class0, class1, (Comparator) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to instantiate proxy for type \"java.util.SimpleTimeZone\".  Make sure the class has a default constructor.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      ProxyCollections proxyCollections0 = new ProxyCollections();
      proxyManagerImpl0.newCustomProxy(proxyCollections0, true);
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(proxyCollections0, false);
      assertNotNull(proxy0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      DelayedTreeSetProxy delayedTreeSetProxy0 = new DelayedTreeSetProxy();
      PriorityQueue<System> priorityQueue0 = new PriorityQueue<System>((SortedSet<? extends System>) delayedTreeSetProxy0);
      proxyManagerImpl0.newCustomProxy(priorityQueue0, true);
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(priorityQueue0, true);
      assertNotNull(proxy0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Calendar calendar0 = MockCalendar.getInstance();
      proxyManagerImpl0.copyCalendar(calendar0);
      Object object0 = proxyManagerImpl0.copyCustom(calendar0);
      assertNotNull(object0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      OrderedMap<TimeZone, Date> orderedMap0 = new OrderedMap<TimeZone, Date>();
      proxyManagerImpl0.copyMap(orderedMap0);
      proxyManagerImpl0.copyMap(orderedMap0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Calendar> class0 = Calendar.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableMapType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for abstract type \"class java.util.Calendar\".  You must use a concrete type or a recognized interface.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Boolean> class0 = Boolean.TYPE;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableCollectionType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for abstract type \"boolean\".  You must use a concrete type or a recognized interface.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      // Undeclared exception!
      try { 
        proxyManagerImpl0.toProxyableCollectionType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create a second class object proxy for interface \"null\".  No corresponding concrete types are known.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      TimeZone timeZone0 = TimeZone.getDefault();
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(timeZone0, false);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertNull(proxy0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      ConcurrentDataCache concurrentDataCache0 = new ConcurrentDataCache();
      // Undeclared exception!
      try { 
        proxyManagerImpl0.newCustomProxy(concurrentDataCache0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.openjpa.datacache.AbstractDataCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Date date0 = new Date((-1911L));
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(date0, false);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      TreeSet<DelayedVectorProxy> treeSet0 = new TreeSet<DelayedVectorProxy>();
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(treeSet0, true);
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<DelayedVectorProxy> class0 = DelayedVectorProxy.class;
      proxyManagerImpl0.newCustomProxy(class0, true);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      DelayedLinkedHashSetProxy delayedLinkedHashSetProxy0 = new DelayedLinkedHashSetProxy();
      proxyManagerImpl0.newCustomProxy(delayedLinkedHashSetProxy0, true);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.newCustomProxy((Object) null, false);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Proxies proxies0 = new Proxies();
      Object object0 = proxyManagerImpl0.copyCustom(proxies0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertNull(object0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Date date0 = new Date(0L);
      proxyManagerImpl0.copyCustom(date0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Hashtable<String, System> hashtable0 = new Hashtable<String, System>();
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Hashtable hashtable1 = (Hashtable)proxyManagerImpl0.copyCustom(hashtable0);
      assertTrue(hashtable1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      LinkedList<DetachedValueStateManager> linkedList0 = new LinkedList<DetachedValueStateManager>();
      LinkedList linkedList1 = (LinkedList)proxyManagerImpl0.copyCustom(linkedList0);
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      DelayedTreeSetProxy delayedTreeSetProxy0 = new DelayedTreeSetProxy();
      proxyManagerImpl0.copyCustom(delayedTreeSetProxy0);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCustom((Object) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Locale locale0 = Locale.KOREA;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(mockGregorianCalendar0, true);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCalendar((Calendar) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyDate((java.util.Date) null);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyMap((Map) null);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy> hashtable0 = new Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy>();
      Map map0 = proxyManagerImpl0.copyMap(hashtable0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      DelayedPriorityQueueProxy delayedPriorityQueueProxy0 = new DelayedPriorityQueueProxy();
      proxyManagerImpl0.copyCollection(delayedPriorityQueueProxy0);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyCollection((Collection) null);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      LinkedList<DetachedValueStateManager> linkedList0 = new LinkedList<DetachedValueStateManager>();
      Collection collection0 = proxyManagerImpl0.copyCollection(linkedList0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.copyArray((Object) null);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      LinkedList<DelayedHashSetProxy> linkedList0 = new LinkedList<DelayedHashSetProxy>();
      Proxy proxy0 = proxyManagerImpl0.newCustomProxy(linkedList0, false);
      // Undeclared exception!
      try { 
        proxyManagerImpl0.copyArray(proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to copy array: Argument is not an array.
         //
         verifyException("org.apache.openjpa.util.ProxyManagerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setUnproxyable("cf");
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setUnproxyable((String) null);
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getDelayCollectionLoading();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertFalse(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getTrackChanges();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      assertTrue(proxyManagerImpl0.getTrackChanges());
      
      proxyManagerImpl0.setTrackChanges(false);
      boolean boolean0 = proxyManagerImpl0.getTrackChanges();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.setAssertAllowedType(true);
      Class<Proxies> class0 = Proxies.class;
      Class<DelayedHashSetProxy> class1 = DelayedHashSetProxy.class;
      Class<MapChangeTrackerImpl> class2 = MapChangeTrackerImpl.class;
      proxyManagerImpl0.newMapProxy(class0, class1, class2, (Comparator) null, true);
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      Class<Calendar> class0 = Calendar.class;
      proxyManagerImpl0.generateProxyMapBytecode(class0, false, "setgetAvailableLocales");
      Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy> hashtable0 = new Hashtable<DelayedHashSetProxy, DelayedLinkedListProxy>();
      Map map0 = proxyManagerImpl0.copyMap(hashtable0);
      Class<DelayedHashSetProxy> class1 = DelayedHashSetProxy.class;
      proxyManagerImpl0.generateProxyCollectionBytecode(class1, true, "\"5[]E");
      ProxyManagerImpl proxyManagerImpl1 = new ProxyManagerImpl();
      proxyManagerImpl1.copyMap(map0);
      NotSerializableException notSerializableException0 = new NotSerializableException();
      proxyManagerImpl0.copyCustom(notSerializableException0);
      Class<ProxyManagerImpl> class2 = ProxyManagerImpl.class;
      Comparator<DetachedValueStateManager> comparator0 = (Comparator<DetachedValueStateManager>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      DelayedTreeSetProxy delayedTreeSetProxy0 = new DelayedTreeSetProxy(comparator0);
      DelayedPriorityQueueProxy delayedPriorityQueueProxy0 = new DelayedPriorityQueueProxy((SortedSet) delayedTreeSetProxy0);
      Comparator comparator1 = delayedPriorityQueueProxy0.comparator();
      // Undeclared exception!
      proxyManagerImpl0.newCollectionProxy(class1, class2, comparator1, false);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      boolean boolean0 = proxyManagerImpl0.getAssertAllowedType();
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
      assertFalse(boolean0);
      assertTrue(proxyManagerImpl0.getTrackChanges());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ProxyManagerImpl proxyManagerImpl0 = new ProxyManagerImpl();
      proxyManagerImpl0.getUnproxyable();
      assertFalse(proxyManagerImpl0.getAssertAllowedType());
      assertTrue(proxyManagerImpl0.getTrackChanges());
      assertFalse(proxyManagerImpl0.getDelayCollectionLoading());
  }
}
